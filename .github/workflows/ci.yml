name: Install lint and test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CI: true
  dist: package/dist

jobs:
  install_dependencies:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
  build:
    name: Build Tests
    needs: [install_dependencies]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/assert-build
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - name: Lint
        run: pnpm lint
  tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - run: pnpm test
  publishDocs:
    name: Publish Demos to Cloudflare Pages
    runs-on: ubuntu-latest
    needs:
      - install_dependencies
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm
      - run: pnpm build:docs
      - name: Publish to Cloudflare Pages
        id: publishStep
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.UX_OSS_CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.UX_OSS_CLOUDFLARE_ACCOUNT_ID }}
          projectName: graphics-core
          directory: ./test-app/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |+
            ## Preview URLs
            Env: ${{ steps.publishStep.outputs.environment }}
            Docs: ${{ steps.publishStep.outputs.url }}
  release:
    permissions:
        contents: write # to create release commit (google-github-actions/release-please-action)
        pull-requests: write # to create release PR (google-github-actions/release-please-action)
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
          with:
            persist-credentials: false
      - uses: ./.github/actions/pnpm
      - uses: ./.github/actions/download-built-package
      - name: Release
        id: release
        if: ${{ github.ref_name == 'main' }}
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          default-branch: main
          token: ${{ secrets.GITHUB_TOKEN }}
      # Setup .npmrc file to publish to npm
      # - name: Setup Node
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '16.15.1'
      #     registry-url: 'https://registry.npmjs.org'
      #     cache: 'pnpm'
      - name: Publish
        run: pnpm publish
        if: ${{ steps.release.outputs.releases_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}